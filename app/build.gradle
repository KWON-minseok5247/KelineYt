plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    // parcelize는 data class를 다른 프래그먼트로 등록시켜주는 것인듯?
//    id 'androidx.navigation.safeargs.kotlin'
//    id 'dagger.hilt.android.plugin'

    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'

}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'com.example.kelineyt'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.kelineyt"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "firebase_api_key", properties['firebase_api_key']
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.1"
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.4'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.4'
    implementation 'com.google.firebase:firebase-firestore-ktx:24.1.1'
    implementation 'com.google.firebase:firebase-analytics:20.1.2'
    implementation 'com.google.firebase:firebase-storage-ktx:20.0.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'


    apply plugin: "kotlin-kapt"
//    kapt("org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.3.0")

//    implementation 'androidx.core:core-ktx:1.7.0'
//    implementation 'androidx.appcompat:appcompat:1.4.1'
//    implementation 'com.google.android.material:material:1.5.0'
//    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
//    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'
//
//    testImplementation 'junit:junit:4.+'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

//    //intuit
//    implementation 'com.intuit.sdp:sdp-android:1.0.6'
//    implementation 'com.intuit.ssp:ssp-android:1.0.6'


    //loading button
    implementation 'br.com.simplepass:loading-button-android:2.2.0'

//    //firebase
    implementation platform('com.google.firebase:firebase-bom:31.2.0')
    implementation 'com.google.firebase:firebase-database-ktx'

//    implementation 'com.google.firebase:firebase-database-ktx'
//    implementation 'com.google.firebase:firebase-firestore-ktx:24.0.1'
//    implementation 'com.google.firebase:firebase-auth-ktx:21.0.1'
//    implementation 'com.google.firebase:firebase-storage'
//    implementation 'com.google.firebase:firebase-storage-ktx:20.0.0'
//    implementation 'com.google.firebase:firebase-common-ktx:20.0.0'
//    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.0'
//    implementation 'com.firebaseui:firebase-ui-auth:4.3.2'
//
//    //google play services
//    implementation 'com.google.android.gms:play-services-auth:20.1.0'
//
//    //smooth bar
//    implementation 'com.github.ibrahimsn98:SmoothBottomBar:1.7.9'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.13.0'

    //circular image
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //Navigation and safe args
    def nav_version = "2.5.2"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //viewpager2 indicatior
    implementation 'io.github.vejei.viewpagerindicator:viewpagerindicator:1.0.0-alpha.1'

    //lifecycle
    implementation "android.arch.lifecycle:extensions:1.1.0"

//    //Firebase coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.5.1'

    //stepView
    implementation 'com.shuhart.stepview:stepview:1.5.1'

    //Android Ktx
    implementation "androidx.fragment:fragment-ktx:1.4.1"


    //Dagger hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    //Firebase
    implementation 'com.google.firebase:firebase-auth:21.0.3'

    def paging_version = "3.1.1"

    implementation("androidx.paging:paging-runtime:$paging_version")

    // alternatively - without Android dependencies for tests
    testImplementation("androidx.paging:paging-common:$paging_version")

    // optional - RxJava2 support
    implementation("androidx.paging:paging-rxjava2:$paging_version")

    // optional - RxJava3 support
    implementation("androidx.paging:paging-rxjava3:$paging_version")

    // optional - Guava ListenableFuture support
    implementation("androidx.paging:paging-guava:$paging_version")

    // optional - Jetpack Compose integration
    implementation("androidx.paging:paging-compose:1.0.0-alpha18")

    // ROOM Database 사용
    implementation("androidx.room:room-runtime:2.4.3")
    annotationProcessor("androidx.room:room-compiler:2.4.3")
    kapt("androidx.room:room-compiler:2.4.3")
    implementation("androidx.room:room-ktx:2.4.3")



    // Jetpack Compose 사용
    def composeBom = platform("androidx.compose:compose-bom:2023.01.00")
    implementation composeBom
    androidTestImplementation composeBom

    // Choose one of the following:
    // Material Design 3
    implementation("androidx.compose.material3:material3")
    // or Material Design 2
    implementation("androidx.compose.material:material")
    // or skip Material Design and build directly on top of foundational components
    implementation("androidx.compose.foundation:foundation")
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation("androidx.compose.ui:ui")

    // Android Studio Preview support
    implementation("androidx.compose.ui:ui-tooling-preview")
    debugImplementation("androidx.compose.ui:ui-tooling")

    // UI Tests
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
    debugImplementation("androidx.compose.ui:ui-test-manifest")

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation("androidx.compose.material:material-icons-core")
    // Optional - Add full set of material icons
    implementation("androidx.compose.material:material-icons-extended")
    // Optional - Add window size utils
    implementation("androidx.compose.material3:material3-window-size-class")

    // Optional - Integration with activities
    implementation("androidx.activity:activity-compose:1.6.1")
    // Optional - Integration with ViewModels
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1")
    // Optional - Integration with LiveData
    implementation("androidx.compose.runtime:runtime-livedata")
    // Optional - Integration with RxJava
    implementation("androidx.compose.runtime:runtime-rxjava2")


}